{"ast":null,"code":"var _jsxFileName = \"/home/tkthanatorn/dev/SuperAI/hackathon2/front/src/features/core/index.js\",\n    _s = $RefreshSig$();\n\nimport { CoreProvider, useController } from \"./controller\";\nimport { withController } from '../../hoc/withController';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Core() {\n  _s();\n\n  const controller = useController();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.header,\n      children: controller.test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Core, \"723qN+DbGSzK01kKttoPcLpk9Bw=\", false, function () {\n  return [useController, useStyles];\n});\n\n_c = Core;\nconst useStyles = makeStyles({\n  header: {\n    'color': 'red'\n  }\n});\nexport default withController(CoreProvider)(Core);\n\nvar _c;\n\n$RefreshReg$(_c, \"Core\");","map":{"version":3,"sources":["/home/tkthanatorn/dev/SuperAI/hackathon2/front/src/features/core/index.js"],"names":["CoreProvider","useController","withController","makeStyles","Core","controller","classes","useStyles","header","test"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,cAA5C;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,UAAT,QAA2B,aAA3B;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,QAAMK,OAAO,GAAGC,SAAS,EAAzB;AACA,sBACI;AAAA,2BACI;AAAI,MAAA,SAAS,EAAED,OAAO,CAACE,MAAvB;AAAA,gBAAgCH,UAAU,CAACI;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GARQL,I;UACcH,a,EACHM,S;;;KAFXH,I;AAUT,MAAMG,SAAS,GAAGJ,UAAU,CAAC;AACzBK,EAAAA,MAAM,EAAE;AACJ,aAAS;AADL;AADiB,CAAD,CAA5B;AAMA,eAAeN,cAAc,CAACF,YAAD,CAAd,CAA6BI,IAA7B,CAAf","sourcesContent":["import { CoreProvider, useController } from \"./controller\"\nimport { withController } from '../../hoc/withController'\nimport { makeStyles } from '@mui/styles'\n\nfunction Core() {\n    const controller = useController()\n    const classes = useStyles()\n    return (\n        <>\n            <h1 className={classes.header}>{controller.test}</h1>\n        </>\n    )\n}\n\nconst useStyles = makeStyles({\n    header: {\n        'color': 'red'\n    }\n})\n\nexport default withController(CoreProvider)(Core)"]},"metadata":{},"sourceType":"module"}