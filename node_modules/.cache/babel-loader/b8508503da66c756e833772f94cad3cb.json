{"ast":null,"code":"var _jsxFileName = \"/home/tkthanatorn/dev/SuperAI/hackathon2/front/src/core/GlobalController.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const context = /*#__PURE__*/createContext();\nexport const useController = () => {\n  _s();\n\n  return new Controller(useContext(context));\n};\n\n_s(useController, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nclass Controller {\n  constructor(context) {\n    this.context = context;\n    this.test = context.test;\n  }\n\n}\n\nexport function GlobalProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const test = 'Machima Machipataaaaaa';\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: {\n      test\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/tkthanatorn/dev/SuperAI/hackathon2/front/src/core/GlobalController.js"],"names":["useContext","createContext","context","useController","Controller","constructor","test","GlobalProvider","children"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,OAAO,gBAAGD,aAAa,EAA7B;AAEP,OAAO,MAAME,aAAa,GAAG;AAAA;;AAAA,SAAM,IAAIC,UAAJ,CAAeJ,UAAU,CAACE,OAAD,CAAzB,CAAN;AAAA,CAAtB;;GAAMC,a;;AAEb,MAAMC,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAACH,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKI,IAAL,GAAYJ,OAAO,CAACI,IAApB;AACH;;AAJY;;AAOjB,OAAO,SAASC,cAAT,OAAsC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEzC,QAAMF,IAAI,GAAG,wBAAb;AAEA,sBACI,QAAC,OAAD,CAAS,QAAT;AACI,IAAA,KAAK,EAAE;AACHA,MAAAA;AADG,KADX;AAAA,cAKKE;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;KAbeD,c","sourcesContent":["import { useContext, createContext } from 'react'\n\nexport const context = createContext()\n\nexport const useController = () => new Controller(useContext(context))\n\nclass Controller {\n    constructor(context) {\n        this.context = context\n        this.test = context.test\n    }\n}\n\nexport function GlobalProvider({ children }) {\n\n    const test = 'Machima Machipataaaaaa'\n\n    return (\n        <context.Provider\n            value={{\n                test\n            }}\n        >\n            {children}\n        </context.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}