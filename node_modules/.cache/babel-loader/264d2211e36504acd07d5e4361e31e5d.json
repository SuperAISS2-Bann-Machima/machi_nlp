{"ast":null,"code":"var _jsxFileName = \"/home/tkthanatorn/dev/SuperAI/hackathon2/front/src/components/common/Button.js\";\nimport { Button as Btn, createTheme, ThemeProvider } from \"@mui/material\";\nimport { PRIMARY } from '../../constant/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Button(_ref) {\n  let {\n    color = 'primary' | 'secondary' | 'error' | 'success',\n    variant = 'contained' | 'outlined'\n  } = _ref;\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: PRIMARY\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Btn, {\n      color: \"error\",\n      variant: variant,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/tkthanatorn/dev/SuperAI/hackathon2/front/src/components/common/Button.js"],"names":["Button","Btn","createTheme","ThemeProvider","PRIMARY","color","variant","theme","palette","primary","main"],"mappings":";AAAA,SAASA,MAAM,IAAIC,GAAnB,EAAwBC,WAAxB,EAAqCC,aAArC,QAA0D,eAA1D;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AACA,OAAO,SAASJ,MAAT,OAGJ;AAAA,MAHoB;AACnBK,IAAAA,KAAK,GAAG,YAAY,WAAZ,GAA0B,OAA1B,GAAoC,SADzB;AAEnBC,IAAAA,OAAO,GAAG,cAAc;AAFL,GAGpB;AACC,QAAMC,KAAK,GAAGL,WAAW,CAAC;AACtBM,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAEN;AADD;AADJ;AADa,GAAD,CAAzB;AAQA,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEG,KAAtB;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,OAAX;AAAmB,MAAA,OAAO,EAAED,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAjBeN,M","sourcesContent":["import { Button as Btn, createTheme, ThemeProvider } from \"@mui/material\";\nimport { PRIMARY } from '../../constant/colors'\nexport function Button({\n    color = 'primary' | 'secondary' | 'error' | 'success',\n    variant = 'contained' | 'outlined'\n}) {\n    const theme = createTheme({\n        palette: {\n            primary: {\n                main: PRIMARY\n            }\n        }\n    })\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Btn color='error' variant={variant} >Click</Btn>\n        </ThemeProvider>\n    )\n}"]},"metadata":{},"sourceType":"module"}